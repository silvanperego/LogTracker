<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "dtd/docbookx.dtd" [
<!ENTITY logtracker "<emphasis>Instant Log Tracker</emphasis>">
	]>
<?altova_sps http://www.altova.com/sps/Template/Publishing/docbook.sps?>
<book>
	<bookinfo>
		<title>Instant Log-Tracker</title>
		<subtitle>User's Manual</subtitle>
		<copyright><holder>Silvan Perego</holder><year>2016</year></copyright>
	</bookinfo>
	<title>Instant Log-Tracker</title>
	<subtitle>User's Manual</subtitle>
	
	<chapter id="chap_Overview">
		<title id="log_flavours">Overview</title>
		<para>&logtracker; is an easy to use tool for ad-hoc analysis and monitoring of application server log files. 
		Logtracker consists of a single executable (which requires a Java 8 runtime) and can be applied easily and 
		straightforward as long as you have physical access to your log files.
		</para>
		<para>Special features are:</para>
		<itemizedlist>
			<listitem><para>Log-File formats are configurable by the use of regex expression. Almost any log-file format, therefore can be monitored after 
					having specified its format.</para></listitem>
			<listitem><para>Log-Files are constantly monitored. New data is processed immediately.</para></listitem>
			<listitem><para>All processing is done in memory. While this imposes some limits onto the amount of data that can be analyzed, it leads to 
					highly efficient processing.</para></listitem>
		</itemizedlist>
		<para>&logtracker; supports the following flavors of log files:</para>
		<variablelist>
			<varlistentry><term><indexterm><primary>Service Call Statistics</primary></indexterm>Service Call Statistics Files</term>
			<listitem><para>typically contain one or more lines per service call. The contain information about who called which service when and how 
			long the server took to response. This file type may also contain a response code that indicates, if a service call was successful or not. 
			&logtracker; calculates service call statistics and creates service scatter plots for the analysis of this type of data.</para></listitem>
			</varlistentry>
			<varlistentry><term><indexterm><primary>Message Logs</primary></indexterm>Message Logs</term>
				<listitem><para>typically contain messages about events that occurred within the server. They typically have an occurrence time stamp, a 
				severity and a message text. &logtracker; uses some fuzzy logic to recognize "similar" messages and put them into the same categories. 
				A special chart show the frequency of a certain type of messages.</para></listitem>
			</varlistentry>
			<varlistentry><term><indexterm><primary>Correlation Logs</primary></indexterm>Correlation Logs</term>
				<listitem><para>contain some additional information that is bound to a service call via a correlation-ID. Payload-Logs normally are of this type.
				&logtracker; allows the correlation of log entries that are spread over various files and file types by correlation-ID.</para></listitem>
			</varlistentry>
		</variablelist>
	</chapter>
	<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="install.xml" />
	<chapter><title>Concepts</title>
		<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="UserInterface.xml" />
		<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="DataFlow.xml" />
	</chapter>
	<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="Configuration.xml" />
	<chapter><title>Work with log file data</title>
		<para>As written in <xref linkend="log_flavours"/>, &logtracker; supports three basic flavors of log file analysis. Each flavor has its specialties
			and &logtracker; provides adapted techniques for each of them.
		</para>
		<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="ServiceCallStats.xml" />
		<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="ErrorLogs.xml" />
		<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="CorrelationData.xml" />
	</chapter>
</book>
